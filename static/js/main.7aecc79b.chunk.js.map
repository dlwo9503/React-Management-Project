{"version":3,"sources":["logo.svg","components/CustomerAdd.js","components/CustomerDelete.js","components/Customer.js","App.js","reportWebVitals.js","index.js"],"names":["CustomerAdd","props","handleFormSubmit","e","preventDefault","addCustomer","then","response","console","log","data","stateRefresh","setState","file","userName","birthday","gender","job","fileName","open","handleFileChange","target","files","value","handleValueChange","nextState","name","formData","FormData","append","state","post","headers","handleClickOpen","handleClose","classes","this","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","className","hidden","accept","id","type","onChange","htmlFor","component","TextField","label","DialogActions","React","Component","withStyles","theme","display","CustomerDelete","fetch","method","Typography","gutterBottom","deleteCustomer","Customer","TableRow","TableCell","src","image","alt","App","customers","completed","searchKeyword","callApi","res","catch","err","a","json","body","progress","timer","setInterval","root","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","title","noWrap","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","inputProps","menu","Paper","paper","Table","table","TableHead","map","c","tableHead","TableBody","filter","indexOf","colSpan","align","width","minWidth","marginTop","marginBottom","justifyContent","fontSize","marginLeft","marginRight","margin","spacing","unit","flexGrow","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","padding","height","pointerEvents","alignItems","paddingLeft","transition","transitions","create","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","fontFamily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aecc79b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { post } from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DialogContentText } from '@material-ui/core';\n\nconst styles = theme => ({\n    hidden: {\n        display: 'none'\n    }\n});\n\nclass CustomerAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null, // 바이트 형태의 파일\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '', // 이미지의 이름\n            open: false\n        }\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n        this.addCustomer()\n            .then((response) => {\n                console.log(response.data);\n                this.props.stateRefresh();\n            })\n        this.setState({\n            file: null, // 바이트 형태의 파일\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '', // 이미지의 이름\n            open: false\n        })\n    }\n\n    handleFileChange = (e) => {\n        this.setState({\n            file: e.target.files[0],\n            fileName: e.target.value\n        })\n    }\n\n    handleValueChange = (e) => {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    addCustomer = () => {\n        const url = '/api/customers';\n        const formData = new FormData();\n        formData.append('image', this.state.file);\n        formData.append('name', this.state.userName);\n        formData.append('birthday', this.state.birthday);\n        formData.append('gender', this.state.gender);\n        formData.append('job', this.state.job);\n        const config = {\n            headers: {\n                'content-type' : 'multipart/form-data'\n            }\n        }\n        return post(url, formData, config);\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n           open: true \n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            file: null, // 바이트 형태의 파일\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '', // 이미지의 이름\n            open: false\n        })\n    }\n\n    render() { // 헨들폼 함수가 수행되도록\n        const { classes } = this.props;\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n                    고객 추가하기\u001e\n                </Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle>고객 추가</DialogTitle>\n                    <DialogContent>\n                        <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange}/><br/>\n                        <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\n                                {this.state.fileName === \"\" ? \"프로필 이미지 선택\u001d\" : this.state.fileName}\n                            </Button>\n                        </label>\n                        <br/>\n                        <TextField label=\"이름\" type=\"txet\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange}/><br/>\n                        <TextField label=\"생년월일\" type=\"txet\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange}/><br/>\n                        <TextField label=\"성별\" type=\"txet\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange}/><br/>\n                        <TextField label=\"직업\" type=\"txet\" name=\"job\" value={this.state.job} onChange={this.handleValueChange}/><br/>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n            /*\n            <form onSubmit={this.handleFormSubmit}>\n                <h1>고객 추가</h1>\n                프로필 이미지 : <input type=\"file\" name=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange}/><br/>\n                이름 : <input type=\"txet\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange}/><br/>\n                생년월일 : <input type=\"txet\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange}/><br/>\n                성별 : <input type=\"txet\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange}/><br/>\n                직업 : <input type=\"txet\" name=\"job\" value={this.state.job} onChange={this.handleValueChange}/><br/>\n                <button type=\"submit\">추가하기\u001d</button>\n            </form>\n            */\n        )\n    }\n}\n\nexport default withStyles(styles)(CustomerAdd); // 외부에서 사용될 수 있도록 export 해줌\n// 스타일을 적용했으므로 넘길때 withStyles(styles) 같이 해줘야 함","import React from 'react';\nimport CustomerAdd from './CustomerAdd';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { DialogContentText } from '@material-ui/core';\n\nclass CustomerDelete extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n           open: true \n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    }\n\n    deleteCustomer(id) {\n        const url = '/api/customers/' + id; // 이런식으로 하면 /api/customers/id넘버 를 삭제하겠다 라는식으로 명시\n        fetch(url, {\n            method: 'DELETE'\n        });\n        this.props.stateRefresh();\n    }\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>삭제</Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle onClose={this.handleClose}>\n                        삭제 경고\n                    </DialogTitle>\n                    <DialogContent>\n                        <Typography gutterBottom>\n                            선택한 고객 정보가 삭제됩니다.\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={(e) => {this.deleteCustomer(this.props.id)}}>삭제</Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default CustomerDelete;","// import 특정한 라이브러리를 불러올 때 사용\n// export 내보내기 (다른 파일에서 사용할 수 있도록)\n\n// jsx 문법에서 2개이상 사용시 반드시 div와 같은 태그들로 감싸줘야 함 (안하면 오류뜸)\n\n// map함수를 이용해서 반복문을 사용 가능 (map 사용 시 key값을 이용해 구문가능하게 만들어 줘야 함)\n\n// Material UI 사용해보기\n\nimport React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport CustomerDelete from './CustomerDelete';\n\nclass Customer extends React.Component { // 리엑트에 컴포넌트 형태로 작성이 된 클래스를 상속받아서 Customer 클래스 정의하기\n    render() { // render()는 실제로 그려지는 내용 담는 곳, props를 이용해서 받은 값 이용하기 (this)\n        return (\n            <TableRow>\n                <TableCell>{this.props.id}</TableCell>\n                <TableCell><img src={this.props.image} alt=\"profile\" /></TableCell>\n                <TableCell>{this.props.name}</TableCell>\n                <TableCell>{this.props.birthday}</TableCell>\n                <TableCell>{this.props.gender}</TableCell>\n                <TableCell>{this.props.job}</TableCell>\n                <TableCell><CustomerDelete stateRefresh={this.props.stateRefresh} id={this.props.id}/></TableCell>\n            </TableRow>\n        )\n    }\n}\n\nexport default Customer; // Customer 클래스 내보내기","// https://material-ui.com/components/tables/#table // 테이블 디자인 소스 참고\n\n// props는 변경될 수 없는 데이터를 처리하고자 할 때 주로 사용\n// state는 변경될 수 있는 데이터를 처리하고자 할 때 주로 사용\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Customer from './components/Customer'; // export 한 Customer 불러오기\nimport CustomerAdd from './components/CustomerAdd'; // export 한 Customer 불러오기\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'; // 컴포넌트의 외부를 감싸기 위함\nimport { Component } from 'react';\nimport CirculerProgress from '@material-ui/core/CircularProgress';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({ // 머테리얼 유아이에다 css 같이 사용\n  root: { // root class css\n    width: '100%',\n    minWidth: 1080\n  },\n  menu: {\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  tableHead: {\n    fontSize: '1.0rem'\n  },\n  paper: {\n    marginLeft: 18,\n    marginRight: 18\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  }\n})\n\n/*\n<리엑트 라이브러리가 처음 컴포넌트를 실행하는 과정>\n1. constructor() // 불러오고\n2. componentWillMount() // 불러오고\n3. render() // 화면에 보여주고\u001f\n4. componentDidMount() 불러온다\n\nprops or state => shouldComponentUpdate() // 갱신될 경우 다시 불러옴\n리엑트는 화면의 변화를 스스로 감지해서 사용자에게 보여줌\u001e\n*/\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    }\n  }\n\n  stateRefresh = () => {\n    this.setState({\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    });\n    this.callApi()\n      .then(res => this.setState({ customers: res })) // 받아온 데이터를 customers에 저장\n      .catch(err => console.log(err)); // 에러 처리\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20); // 타이머를 이용해서 0.02초마다 progress함수가 수행될 수 있도록 처리\n    this.callApi()\n      .then(res => this.setState({ customers: res })) // 받아온 데이터를 customers에 저장\n      .catch(err => console.log(err)); // 에러 처리\n  }\n\n  callApi = async () => { // 비동기적으로 어떠한 내용을 수행하기 위함\n    const response = await fetch('/api/customers'); // 접속하고자 하는 api의 주소를 넣음\u001f\n    const body = await response.json(); // 고객의 목록이 json 형태로 출력이 되는데 그것을 body라는 변수에 넣어줌\n    return body; // body를 반환\n  }\n  \n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1 }); // completed가 100이 되는 순간 0으로 줄어들고 아닐시 +1\n  }\n  \n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  render() {\n    const filteredComponents = (data) => {\n      data = data.filter((c) => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      });\n      return data.map((c) => {\n        return <Customer stateRefresh={this.stateRefresh} key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job} />\n      })\n    }\n    const { classes } = this.props;\n    const cellList = [\"번호\", \"프로필 이미지\", \"이름\", \"생년월일\", \"성별\", \"직업\", \"설정\"];\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\">\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              고객 관리 시스템\n          </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"검색하기\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                name=\"searchKeyword\"\n                value={this.state.searchKeyword}\n                onChange={this.handleValueChange}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.menu}>\n          <CustomerAdd stateRefresh={this.stateRefresh} />\n        </div>\n        <Paper className={classes.paper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {cellList.map(c => {\n                  return <TableCell className={classes.tableHead}>{c}</TableCell>\n                })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.customers ?\n                filteredComponents(this.state.customers) :\n                <TableRow>\n                  <TableCell colSpan=\"6\" align=\"center\">\n                    <CirculerProgress className={classes.progress} variant=\"indeterminate\" value={this.state.completed} />\n                  </TableCell>\n                </TableRow>\n              }\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App); // styles, app 를 함께 외부에서 사용할 수 있도록 export 해줌","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Noto Sans KR\", serif',\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}